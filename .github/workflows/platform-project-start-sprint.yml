name: Platform Project Start Sprint

on:
  workflow_dispatch:
    inputs:
      sprint-to-start:
        description: 'Please choose the sprint number to start (ie "5" to start Sprint 5).'
        required: true
      auto-add-issues:
        description: "Should unfinished issues from the previous sprint be added to the new sprint?"
        required: true
        default: "yes"
      auto-create-milestone:
        description: "Should a new milestone be automatically created for the new sprint?"
        required: true
        default: "yes"
jobs:
  start-new-sprint:
    name: "Start New Sprint"
    runs-on: ubuntu-latest
    steps:
      - name: Get project data
        env:
          GITHUB_TOKEN: ${{ secrets.PARKER_PAT_FOR_PLATFORM_PROJECT_AUTOMATION }}
          ORG: airbytehq
          PROJECT_NUMBER: 6 # https://github.com/orgs/airbytehq/projects/6
        id: get_project_data
        run: |
          gh api graphql -f query='
            query($org: String!, $number: Int!) {
              organization(login: $org){
                projectNext(number: $number) {
                  id
                  fields(first:100) {
                    nodes {
                      id
                      name
                      settings
                    }
                  }
                }
              }
            }' -f org=$ORG -F number=$PROJECT_NUMBER > project_data.json

          echo ::set-output name=PROJECT_ID::$(jq -r '.data.organization.projectNext.id' project_data.json)
          echo ::set-output name=MILESTONE_FIELD_ID::$(jq -r '.data.organization.projectNext.fields.nodes[] | select(.name== "Milestone") | .id' project_data.json)
          echo ::set-output name=SPRINT_FIELD_ID::$(jq -r '.data.organization.projectNext.fields.nodes[] | select(.name== "Sprint") | .id' project_data.json)
          echo ::set-output name=NEW_SPRINT_VALUE_ID::$(jq -r '.data.organization.projectNext.fields.nodes[] | select(.name== "Sprint") | .settings | fromjson.configuration.iterations[] | select(.title == "Sprint ${{github.event.inputs.sprint-to-start}}") |.id' project_data.json)

          NEW_SPRINT_START_DATE=$(jq -r '.data.organization.projectNext.fields.nodes[] | select(.name== "Sprint") | .settings | fromjson.configuration.iterations[] | select(.title == "Sprint ${{github.event.inputs.sprint-to-start}}") |.start_date' project_data.json)
          echo ::set-output name=NEW_SPRINT_START_DATE::$(echo $NEW_SPRINT_START_DATE)
          echo ::set-output name=MILESTONE_DUE_DATE::$(date -d "${NEW_SPRINT_START_DATE}+7 days" +"%y-%m-%d")
      - name: Create new milestone
        if: github.event.inputs.auto-create-milestone == 'yes'
        env:
          GITHUB_TOKEN: ${{ secrets.PARKER_PAT_FOR_PLATFORM_PROJECT_AUTOMATION }}
        id: create_new_milestone
        run: |
          echo '{
            "title": "Test Platform ${{steps.get_project_data.outputs.NEW_SPRINT_START_DATE}}",
            "state": "open",
            "description": "Testing milestone creation via Github Workflow",
            "due_on": "${{steps.get_project_data.outputs.MILESTONE_DUE_DATE}}"
          }' > milestone_post_input.json

          echo $(jq milestone_post_input.json)

          gh api --method POST repos/airbytehq/airbyte/milestones --input milestone_post_input.json > milestone_creation_output.data

          echo $(jq milestone_creation_output.data)
